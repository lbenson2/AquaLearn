@model AquaLearn.Client.Models.ExhibitViewModel
@using AquaLearn.Domain.Models;
@{
    ViewData["Title"] = "Quiz";
}

<h1>Quiz</h1>

<div class="text-center">
    <h1 class="display-4">Welcome to the Aqua Learn Quiz!</h1>
    <p>Test your marine knowledge and rule the seven seas with our Quiz down below. Whos that marine life? </p>
</div>

<div class="quiz-container">
    <div id="quiz"></div>
</div>
<button id="previous">Previous Question</button>
<button id="next">Next Question</button>
<button id="submit">Submit Quiz</button>
<div id="results"></div>
<style>
    .question {
        font-size: 30px;
        margin-bottom: 10px;
    }

    .answers {
        margin-bottom: 20px;
        text-align: left;
        display: inline-block;
    }

        .answers label {
            display: block;
            margin-bottom: 10px;
        }

    button {
        font-family: 'Work Sans', sans-serif;
        font-size: 22px;
        background-color: #279;
        color: #fff;
        border: 0px;
        border-radius: 3px;
        padding: 20px;
        cursor: pointer;
        margin-bottom: 20px;
    }

        button:hover {
            background-color: #38a;
        }





    .slide {
        position: absolute;
        left: 0px;
        top: 0px;
        width: 100%;
        z-index: 1;
        opacity: 0;
        transition: opacity 0.5s;
    }

    .active-slide {
        opacity: 1;
        z-index: 2;
    }

    .quiz-container {
        position: relative;
        height: 200px;
        margin-top: 40px;
    }
</style>

<script>
    @{
        // C# to JS
        var Exhibit = new Exhibit();
        Model.Fishes = Exhibit.Fishes;
        Model.Vector3Current = new float[] { 0, 0, 0 };
        @:var ctx = draw();

        for (var i = 0; i < Model.Fishes.Count; i++)
        {
            Model.Vector3Current = Exhibit.PlaceMoving();
            for (var a = 0; a < Exhibit.Vector3Current.Length; a++)
            {

                Model.Vector3Current[a] = Exhibit.Vector3Current[a];
            }
            @:drawSquares(@Model.Vector3Current[0], @Model.Vector3Current[1], @Model.Vector3Current[2]);
        }

        for (var i = 0; i < Model.Fishes.Count; i++)
        {
            Model.Vector3Current = Exhibit.PlaceStill();
            for (var a = 0; a < Exhibit.Vector3Current.Length; a++)
            {

                Model.Vector3Current[a] = Exhibit.Vector3Current[a];
            }
            @:drawRectangles(@Model.Vector3Current[0], @Model.Vector3Current[1], @Model.Vector3Current[2]);
        }
    }

    function draw() {
        var myGameArea = document.getElementById("myCanvas");
        if (myGameArea.getContext) {
            ctx = myGameArea.getContext('2d');
        }
        return ctx;
    }

    function drawSquares(x, y, z) {
        ctx.fillRect(x, y, 50, 50);
    }

    function drawRectangles(x, y, z) {
        ctx.fillRect(x, y, 50, 100);
    }
</script>









<script>

    (function () {
        const myQuestions = [
            {
                question: "Who is that fish?",
                answers: {
                    a: "Shark",
                    b: "Swordfish",
                    c: "Tuna",
                    d: "Clown Fish"
                },
                correctAnswer: "a"
            },
            {
                question: "Who is that fish?",
                answers: {
                    a: "Swordfish",
                    b: "Shark",
                    c: "Tuna",
                    d: "Clown Fish"
                },
                correctAnswer: "a"
            },
            {
                question: "Who is that fish?",
                answers: {
                    a: "Swordfish",
                    b: "Shark",
                    c: "Tuna",
                    d: "Clown Fish"
                },
                correctAnswer: "c"
            },
            {
                question: "Who is that fish?",
                answers: {
                    a: "Swordfish",
                    b: "Clown Fish",
                    c: "Tuna",
                    d: "Shark"
                },
                correctAnswer: "b"
            },
            {
                question: "Who is that fish?",
                answers: {
                    a: "StingRay",
                    b: "JellyFish",
                    c: "Eel",
                    d: "Seahorse"
                },
                correctAnswer: "a"
            },
            {
                question: "Who is that fish?",
                answers: {
                    a: "StingRay",
                    b: "Eel",
                    c: "JellyFish",
                    d: "Seahorse"
                },
                correctAnswer: "c"
            },
            {
                question: "Who is that fish?",
                answers: {
                    a: "StingRay",
                    b: "Eel",
                    c: "JellyFish",
                    d: "Seahorse"
                },
                correctAnswer: "b"
            },
            {
                question: "Who is that fish?",
                answers: {
                    a: "StingRay",
                    b: "Seahorse",
                    c: "JellyFish",
                    d: "Eel"
                },
                correctAnswer: "b"
            },
            {
                question: "Who is that Mammal?",
                answers: {
                    a: "Blue Whale",
                    b: "Seal",
                    c: "Walrus",
                    d: "Dolphin"
                },
                correctAnswer: "a"
            },
            {
                question: "Who is that Mammal?",
                answers: {
                    a: "Blue Whale",
                    b: "Walruse",
                    c: "Seal",
                    d: "Dolphin"
                },
                correctAnswer: "c"
            },
            {
                question: "Who is that Mammal?",
                answers: {
                    a: "Blue Whale",
                    b: "Seal",
                    c: "Walrus",
                    d: "Dolphin"
                },
                correctAnswer: "c"
            },
            {
                question: "Who is that Mammal?",
                answers: {
                    a: "Blue Whale",
                    b: "Seal",
                    c: "Walrus",
                    d: "Dolphin"
                },
                correctAnswer: "d"
            },
            {
                question: "Who is that Mammal?",
                answers: {
                    a: "Squid",
                    b: "Octopus",
                    c: "Manatee",
                    d: "Oyster"
                },
                correctAnswer: "c"
            },
            {
                question: "Who is that Mollusk?",
                answers: {
                    a: "Squid",
                    b: "Octopus",
                    c: "Manatee",
                    d: "Oyster"
                },
                correctAnswer: "a"
            },
            {
                question: "Who is that Mollusk?",
                answers: {
                    a: "Squid",
                    b: "Octopus",
                    c: "Manatee",
                    d: "Oyster"
                },
                correctAnswer: "b"
            },
            {
                question: "Who is that Mollusk?",
                answers: {
                    a: "Squid",
                    b: "Octopus",
                    c: "Manatee",
                    d: "Oyster"
                },
                correctAnswer: "d"
            },






        ];

        function buildQuiz() {
            // we'll need a place to store the HTML output
            const output = [];

            // for each question...
            myQuestions.forEach((currentQuestion, questionNumber) => {
                // we'll want to store the list of answer choices
                const answers = [];

                // and for each available answer...
                for (letter in currentQuestion.answers) {
                    // ...add an HTML radio button
                    answers.push(
                        `<label>
             <input type="radio" name="question${questionNumber}" value="${letter}">
              ${letter} :
              ${currentQuestion.answers[letter]}
           </label>`
                    );
                }

                // add this question and its answers to the output
                output.push(
                    `<div class="slide">
           <div class="question"> ${currentQuestion.question} </div>
           <div class="answers"> ${answers.join("")} </div>
         </div>`
                );
            });

            // finally combine our output list into one string of HTML and put it on the page
            quizContainer.innerHTML = output.join("");
        }

        function showResults() {
            // gather answer containers from our quiz
            const answerContainers = quizContainer.querySelectorAll(".answers");

            // keep track of user's answers
            let numCorrect = 0;

            // for each question...
            myQuestions.forEach((currentQuestion, questionNumber) => {
                // find selected answer
                const answerContainer = answerContainers[questionNumber];
                const selector = `input[name=question${questionNumber}]:checked`;
                const userAnswer = (answerContainer.querySelector(selector) || {}).value;

                // if answer is correct
                if (userAnswer === currentQuestion.correctAnswer) {
                    // add to the number of correct answers
                    numCorrect++;


                }
            });

            // show number of correct answers out of total
            resultsContainer.innerHTML = `${numCorrect} out of ${myQuestions.length}`;
        }

        function showSlide(n) {
            slides[currentSlide].classList.remove("active-slide");
            slides[n].classList.add("active-slide");
            currentSlide = n;

            if (currentSlide === 0) {
                previousButton.style.display = "none";
            } else {
                previousButton.style.display = "inline-block";
            }

            if (currentSlide === slides.length - 1) {
                nextButton.style.display = "none";
                submitButton.style.display = "inline-block";
            } else {
                nextButton.style.display = "inline-block";
                submitButton.style.display = "none";
            }
        }

        function showNextSlide() {
            showSlide(currentSlide + 1);
        }

        function showPreviousSlide() {
            showSlide(currentSlide - 1);
        }

        const quizContainer = document.getElementById("quiz");
        const resultsContainer = document.getElementById("results");
        const submitButton = document.getElementById("submit");

        // display quiz right away
        buildQuiz();

        const previousButton = document.getElementById("previous");
        const nextButton = document.getElementById("next");
        const slides = document.querySelectorAll(".slide");
        let currentSlide = 0;

        showSlide(0);

        // on submit, show results
        submitButton.addEventListener("click", showResults);
        previousButton.addEventListener("click", showPreviousSlide);
        nextButton.addEventListener("click", showNextSlide);
    })();
</script>


<div class="row">
    <div class="col">
        <canvas id="myCanvas" width="720" height="480" style="border:1px solid #000000;"></canvas>
    </div>
</div>


