@model AquaLearn.Client.Models.ExhibitViewModel
@using AquaLearn.Domain.Models;
@{
    ViewData["Title"] = "Home Page";
}

<body style="background-size: cover; background-image: url(https://cdn5.vectorstock.com/i/1000x1000/42/04/cartoon-shark-pirate-swimming-in-the-ocean-vector-6594204.jpg)">
    <div class="text-center">
        <h1 class="display-4">Welcome to Aqua Learn!</h1>
        <p>Create and account or login to learn about me and my crew! Explore or natural habitats and learn how to help keep our home clean!</p>
    </div>

</body>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="row">
    <div class="col">
        <canvas id="myCanvas" width="720" height="480" style="border:1px solid #000000;"></canvas>
    </div>
</div>



<script>
    @{
        // C# to JS
        var Exhibit = new Exhibit();
        Model.Fishes = Exhibit.Fishes;
        Model.Plants = Exhibit.Plants;
        Model.Vector3Current = new float[] { 0, 0, 0 };
        @:var last = new Date();
        @:var myGameArea = draw();
        @:var ctx = getContext();

        // FPS set to ~60fps
        @:place();
    }

    function draw() {
        var myGameArea = document.getElementById("myCanvas");
        return myGameArea;
    }

    function getContext() {
        if (myGameArea.getContext) {
            ctx = myGameArea.getContext('2d');
        }
        return ctx;
    }

    function drawSquares(x, y, z) {
        ctx.fillRect(x, y, 50, 50);
    }

    function drawRectangles(x, y, z) {
        ctx.fillRect(x, y, 50, 100);
    }

    function clear() {
        ctx.clearRect(0, 0, 720, 480);
    }

    function place()
    {
        @{ 
            for (int i = 0; i < Model.Fishes.Count; i++)
            {
                if (Model.Vector3Current == null)
                {
                    Model.Vector3Current = Exhibit.PlaceMoving(i);
                }
                else
                {
                    Model.Vector3Current = Exhibit.Moving(i);
                }

                for (int a = 0; a < Exhibit.Fishes[i].Vector3Current.Length; a++)
                {
                    Model.Vector3Current[a] = Exhibit.Fishes[i].Vector3Current[a];
                }
                @:drawSquares(@Model.Vector3Current[0], @Model.Vector3Current[1], @Model.Vector3Current[2]);
            }

            for (int i = 0; i < Model.Plants.Count; i++)
            {
                if (Model.Vector3Current == null)
                {
                    Model.Vector3Current = Exhibit.PlaceStill(i);
                }

                for (int b = 0; b < Exhibit.Plants[i].Vector3Current.Length; b++)
                {
                    Model.Vector3Current[b] = Exhibit.Plants[i].Vector3Current[b];
                }
                @:console.log(@Model.Vector3Current[0], @Model.Vector3Current[1], @Model.Vector3Current[2]);
                @:drawRectangles(@Model.Vector3Current[0], @Model.Vector3Current[1], @Model.Vector3Current[2]);
            }
        }
    }

    function update() {
        console.log("Update");
        clear();
        place();
    }
</script>
